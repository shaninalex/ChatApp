version: "3.7"

volumes:
  postgres_data:

services:

  # ==================================== 
  # Apps
  # ==================================== 
  ory_hooks:
    build: ./service-oryhooks
    restart: always
    env_file:
      - ./service-oryhooks/.env
    ports:
      - 8081:8081
    depends_on:
      ejabberd:
        condition: service_started

  service_profile:
    image: shanart/m-kratos-forms-proxy:latest
    restart: on-failure
    ports:
      - 8000:8000
    environment:
      - PORT=8000
      - KRATOS_URL=http://kratos:4433
    depends_on:
      - kratos

  service_chat:
    build: ./service-chat
    restart: always
    env_file:
      - ./service-chat/.env
    ports:
      - 8083:8083

  # ==================================== 
  # INFRASTRUCTURE
  # ==================================== 
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_MULTIPLE_DATABASES=chat,kratos,ejabberd
    ports:
      - 5432:5432
    volumes:
      - ./configs/db/:/docker-entrypoint-initdb.d/
      - postgres_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Ejabberd server
  # Main part of the application that will handle all user comunication
  ejabberd:
    image: ejabberd/ecs
    restart: on-failure
    ports:
      - 5222:5222 # client to server
      - 5280:5280 # web console
      - 5443:5443
      # - websocket
    environment:
      - CTL_ON_CREATE=register admin localhost password
      # - CTL_ON_START=register admin localhost password ;
      #                check_password admin localhost password ;
      #                status
    volumes:
      - ./configs/ejabberd/ejabberd.yml:/home/ejabberd/conf/ejabberd.yml
    depends_on:
      migrate_ejabberd_db:
        condition: service_completed_successfully

  # Migration task. Create schema in the database before ejabberd starts
  migrate_ejabberd_db:
    build: ./configs/migrate_ejabberd_db
    env_file:
      - ./configs/migrate_ejabberd_db/.env
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy

  # Kratos
  kratos-migrate:
    image: oryd/kratos:v1.0.0
    env_file:
      - .env
    volumes:
      - ./configs/kratos:/etc/config/kratos
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    depends_on:
      postgres:
        condition: service_healthy

  kratos:
    image: oryd/kratos:v1.0.0
    env_file:
      - .env
    ports:
      - "4433:4433"
      - "4434:4434"
    volumes:
      - ./configs/kratos:/etc/config/kratos
    command: serve -c /etc/config/kratos/kratos.yml --dev --watch-courier
    depends_on:
      postgres:
        condition: service_healthy

    # Oathkeeper
  oathkeeper:
    image: oryd/oathkeeper:v0.40
    ports:
      - 8080:4455
      - 4456:4456
    command: serve proxy -c "/etc/config/oathkeeper/oathkeeper.yml"
    environment:
      - LOG_LEVEL=debug
    restart: on-failure
    volumes:
      - ./configs/oathkeeper:/etc/config/oathkeeper
